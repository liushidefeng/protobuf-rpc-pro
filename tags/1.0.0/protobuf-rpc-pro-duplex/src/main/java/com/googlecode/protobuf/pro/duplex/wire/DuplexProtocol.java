// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf-rpc-duplex.proto

package com.googlecode.protobuf.pro.duplex.wire;

public final class DuplexProtocol {
  private DuplexProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum ConnectErrorCode
      implements com.google.protobuf.ProtocolMessageEnum {
    ALREADY_CONNECTED(0, 0),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static ConnectErrorCode valueOf(int value) {
      switch (value) {
        case 0: return ALREADY_CONNECTED;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ConnectErrorCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ConnectErrorCode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ConnectErrorCode>() {
            public ConnectErrorCode findValueByNumber(int number) {
              return ConnectErrorCode.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final ConnectErrorCode[] VALUES = {
      ALREADY_CONNECTED, 
    };
    public static ConnectErrorCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private ConnectErrorCode(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:ConnectErrorCode)
  }
  
  public static final class ConnectRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use ConnectRequest.newBuilder() to construct.
    private ConnectRequest() {
      initFields();
    }
    private ConnectRequest(boolean noInit) {}
    
    private static final ConnectRequest defaultInstance;
    public static ConnectRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ConnectRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internal_static_ConnectRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internal_static_ConnectRequest_fieldAccessorTable;
    }
    
    // required int32 correlationId = 1;
    public static final int CORRELATIONID_FIELD_NUMBER = 1;
    private boolean hasCorrelationId;
    private int correlationId_ = 0;
    public boolean hasCorrelationId() { return hasCorrelationId; }
    public int getCorrelationId() { return correlationId_; }
    
    // required string clientHostName = 2;
    public static final int CLIENTHOSTNAME_FIELD_NUMBER = 2;
    private boolean hasClientHostName;
    private java.lang.String clientHostName_ = "";
    public boolean hasClientHostName() { return hasClientHostName; }
    public java.lang.String getClientHostName() { return clientHostName_; }
    
    // required int32 clientPort = 3;
    public static final int CLIENTPORT_FIELD_NUMBER = 3;
    private boolean hasClientPort;
    private int clientPort_ = 0;
    public boolean hasClientPort() { return hasClientPort; }
    public int getClientPort() { return clientPort_; }
    
    // required string clientPID = 4;
    public static final int CLIENTPID_FIELD_NUMBER = 4;
    private boolean hasClientPID;
    private java.lang.String clientPID_ = "";
    public boolean hasClientPID() { return hasClientPID; }
    public java.lang.String getClientPID() { return clientPID_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasCorrelationId) return false;
      if (!hasClientHostName) return false;
      if (!hasClientPort) return false;
      if (!hasClientPID) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCorrelationId()) {
        output.writeInt32(1, getCorrelationId());
      }
      if (hasClientHostName()) {
        output.writeString(2, getClientHostName());
      }
      if (hasClientPort()) {
        output.writeInt32(3, getClientPort());
      }
      if (hasClientPID()) {
        output.writeString(4, getClientPID());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCorrelationId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getCorrelationId());
      }
      if (hasClientHostName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getClientHostName());
      }
      if (hasClientPort()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getClientPort());
      }
      if (hasClientPID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getClientPID());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest result;
      
      // Construct using com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest();
        return builder;
      }
      
      protected com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest.getDescriptor();
      }
      
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest getDefaultInstanceForType() {
        return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest) {
          return mergeFrom((com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest other) {
        if (other == com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest.getDefaultInstance()) return this;
        if (other.hasCorrelationId()) {
          setCorrelationId(other.getCorrelationId());
        }
        if (other.hasClientHostName()) {
          setClientHostName(other.getClientHostName());
        }
        if (other.hasClientPort()) {
          setClientPort(other.getClientPort());
        }
        if (other.hasClientPID()) {
          setClientPID(other.getClientPID());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCorrelationId(input.readInt32());
              break;
            }
            case 18: {
              setClientHostName(input.readString());
              break;
            }
            case 24: {
              setClientPort(input.readInt32());
              break;
            }
            case 34: {
              setClientPID(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required int32 correlationId = 1;
      public boolean hasCorrelationId() {
        return result.hasCorrelationId();
      }
      public int getCorrelationId() {
        return result.getCorrelationId();
      }
      public Builder setCorrelationId(int value) {
        result.hasCorrelationId = true;
        result.correlationId_ = value;
        return this;
      }
      public Builder clearCorrelationId() {
        result.hasCorrelationId = false;
        result.correlationId_ = 0;
        return this;
      }
      
      // required string clientHostName = 2;
      public boolean hasClientHostName() {
        return result.hasClientHostName();
      }
      public java.lang.String getClientHostName() {
        return result.getClientHostName();
      }
      public Builder setClientHostName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasClientHostName = true;
        result.clientHostName_ = value;
        return this;
      }
      public Builder clearClientHostName() {
        result.hasClientHostName = false;
        result.clientHostName_ = getDefaultInstance().getClientHostName();
        return this;
      }
      
      // required int32 clientPort = 3;
      public boolean hasClientPort() {
        return result.hasClientPort();
      }
      public int getClientPort() {
        return result.getClientPort();
      }
      public Builder setClientPort(int value) {
        result.hasClientPort = true;
        result.clientPort_ = value;
        return this;
      }
      public Builder clearClientPort() {
        result.hasClientPort = false;
        result.clientPort_ = 0;
        return this;
      }
      
      // required string clientPID = 4;
      public boolean hasClientPID() {
        return result.hasClientPID();
      }
      public java.lang.String getClientPID() {
        return result.getClientPID();
      }
      public Builder setClientPID(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasClientPID = true;
        result.clientPID_ = value;
        return this;
      }
      public Builder clearClientPID() {
        result.hasClientPID = false;
        result.clientPID_ = getDefaultInstance().getClientPID();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:ConnectRequest)
    }
    
    static {
      defaultInstance = new ConnectRequest(true);
      com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ConnectRequest)
  }
  
  public static final class ConnectResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use ConnectResponse.newBuilder() to construct.
    private ConnectResponse() {
      initFields();
    }
    private ConnectResponse(boolean noInit) {}
    
    private static final ConnectResponse defaultInstance;
    public static ConnectResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public ConnectResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internal_static_ConnectResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internal_static_ConnectResponse_fieldAccessorTable;
    }
    
    // required int32 correlationId = 1;
    public static final int CORRELATIONID_FIELD_NUMBER = 1;
    private boolean hasCorrelationId;
    private int correlationId_ = 0;
    public boolean hasCorrelationId() { return hasCorrelationId; }
    public int getCorrelationId() { return correlationId_; }
    
    // optional string serverPID = 2;
    public static final int SERVERPID_FIELD_NUMBER = 2;
    private boolean hasServerPID;
    private java.lang.String serverPID_ = "";
    public boolean hasServerPID() { return hasServerPID; }
    public java.lang.String getServerPID() { return serverPID_; }
    
    // optional .ConnectErrorCode errorCode = 3;
    public static final int ERRORCODE_FIELD_NUMBER = 3;
    private boolean hasErrorCode;
    private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectErrorCode errorCode_;
    public boolean hasErrorCode() { return hasErrorCode; }
    public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectErrorCode getErrorCode() { return errorCode_; }
    
    private void initFields() {
      errorCode_ = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectErrorCode.ALREADY_CONNECTED;
    }
    public final boolean isInitialized() {
      if (!hasCorrelationId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCorrelationId()) {
        output.writeInt32(1, getCorrelationId());
      }
      if (hasServerPID()) {
        output.writeString(2, getServerPID());
      }
      if (hasErrorCode()) {
        output.writeEnum(3, getErrorCode().getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCorrelationId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getCorrelationId());
      }
      if (hasServerPID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getServerPID());
      }
      if (hasErrorCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, getErrorCode().getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse result;
      
      // Construct using com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse();
        return builder;
      }
      
      protected com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse.getDescriptor();
      }
      
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse getDefaultInstanceForType() {
        return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse) {
          return mergeFrom((com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse other) {
        if (other == com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse.getDefaultInstance()) return this;
        if (other.hasCorrelationId()) {
          setCorrelationId(other.getCorrelationId());
        }
        if (other.hasServerPID()) {
          setServerPID(other.getServerPID());
        }
        if (other.hasErrorCode()) {
          setErrorCode(other.getErrorCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCorrelationId(input.readInt32());
              break;
            }
            case 18: {
              setServerPID(input.readString());
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectErrorCode value = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectErrorCode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                setErrorCode(value);
              }
              break;
            }
          }
        }
      }
      
      
      // required int32 correlationId = 1;
      public boolean hasCorrelationId() {
        return result.hasCorrelationId();
      }
      public int getCorrelationId() {
        return result.getCorrelationId();
      }
      public Builder setCorrelationId(int value) {
        result.hasCorrelationId = true;
        result.correlationId_ = value;
        return this;
      }
      public Builder clearCorrelationId() {
        result.hasCorrelationId = false;
        result.correlationId_ = 0;
        return this;
      }
      
      // optional string serverPID = 2;
      public boolean hasServerPID() {
        return result.hasServerPID();
      }
      public java.lang.String getServerPID() {
        return result.getServerPID();
      }
      public Builder setServerPID(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasServerPID = true;
        result.serverPID_ = value;
        return this;
      }
      public Builder clearServerPID() {
        result.hasServerPID = false;
        result.serverPID_ = getDefaultInstance().getServerPID();
        return this;
      }
      
      // optional .ConnectErrorCode errorCode = 3;
      public boolean hasErrorCode() {
        return result.hasErrorCode();
      }
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectErrorCode getErrorCode() {
        return result.getErrorCode();
      }
      public Builder setErrorCode(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectErrorCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder clearErrorCode() {
        result.hasErrorCode = false;
        result.errorCode_ = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectErrorCode.ALREADY_CONNECTED;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:ConnectResponse)
    }
    
    static {
      defaultInstance = new ConnectResponse(true);
      com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ConnectResponse)
  }
  
  public static final class RpcRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use RpcRequest.newBuilder() to construct.
    private RpcRequest() {
      initFields();
    }
    private RpcRequest(boolean noInit) {}
    
    private static final RpcRequest defaultInstance;
    public static RpcRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpcRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internal_static_RpcRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internal_static_RpcRequest_fieldAccessorTable;
    }
    
    // required int32 correlationId = 1;
    public static final int CORRELATIONID_FIELD_NUMBER = 1;
    private boolean hasCorrelationId;
    private int correlationId_ = 0;
    public boolean hasCorrelationId() { return hasCorrelationId; }
    public int getCorrelationId() { return correlationId_; }
    
    // required string serviceIdentifier = 2;
    public static final int SERVICEIDENTIFIER_FIELD_NUMBER = 2;
    private boolean hasServiceIdentifier;
    private java.lang.String serviceIdentifier_ = "";
    public boolean hasServiceIdentifier() { return hasServiceIdentifier; }
    public java.lang.String getServiceIdentifier() { return serviceIdentifier_; }
    
    // required string methodIdentifier = 3;
    public static final int METHODIDENTIFIER_FIELD_NUMBER = 3;
    private boolean hasMethodIdentifier;
    private java.lang.String methodIdentifier_ = "";
    public boolean hasMethodIdentifier() { return hasMethodIdentifier; }
    public java.lang.String getMethodIdentifier() { return methodIdentifier_; }
    
    // required bytes requestBytes = 4;
    public static final int REQUESTBYTES_FIELD_NUMBER = 4;
    private boolean hasRequestBytes;
    private com.google.protobuf.ByteString requestBytes_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasRequestBytes() { return hasRequestBytes; }
    public com.google.protobuf.ByteString getRequestBytes() { return requestBytes_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasCorrelationId) return false;
      if (!hasServiceIdentifier) return false;
      if (!hasMethodIdentifier) return false;
      if (!hasRequestBytes) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCorrelationId()) {
        output.writeInt32(1, getCorrelationId());
      }
      if (hasServiceIdentifier()) {
        output.writeString(2, getServiceIdentifier());
      }
      if (hasMethodIdentifier()) {
        output.writeString(3, getMethodIdentifier());
      }
      if (hasRequestBytes()) {
        output.writeBytes(4, getRequestBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCorrelationId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getCorrelationId());
      }
      if (hasServiceIdentifier()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getServiceIdentifier());
      }
      if (hasMethodIdentifier()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getMethodIdentifier());
      }
      if (hasRequestBytes()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getRequestBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest result;
      
      // Construct using com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest();
        return builder;
      }
      
      protected com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest.getDescriptor();
      }
      
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest getDefaultInstanceForType() {
        return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest) {
          return mergeFrom((com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest other) {
        if (other == com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest.getDefaultInstance()) return this;
        if (other.hasCorrelationId()) {
          setCorrelationId(other.getCorrelationId());
        }
        if (other.hasServiceIdentifier()) {
          setServiceIdentifier(other.getServiceIdentifier());
        }
        if (other.hasMethodIdentifier()) {
          setMethodIdentifier(other.getMethodIdentifier());
        }
        if (other.hasRequestBytes()) {
          setRequestBytes(other.getRequestBytes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCorrelationId(input.readInt32());
              break;
            }
            case 18: {
              setServiceIdentifier(input.readString());
              break;
            }
            case 26: {
              setMethodIdentifier(input.readString());
              break;
            }
            case 34: {
              setRequestBytes(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required int32 correlationId = 1;
      public boolean hasCorrelationId() {
        return result.hasCorrelationId();
      }
      public int getCorrelationId() {
        return result.getCorrelationId();
      }
      public Builder setCorrelationId(int value) {
        result.hasCorrelationId = true;
        result.correlationId_ = value;
        return this;
      }
      public Builder clearCorrelationId() {
        result.hasCorrelationId = false;
        result.correlationId_ = 0;
        return this;
      }
      
      // required string serviceIdentifier = 2;
      public boolean hasServiceIdentifier() {
        return result.hasServiceIdentifier();
      }
      public java.lang.String getServiceIdentifier() {
        return result.getServiceIdentifier();
      }
      public Builder setServiceIdentifier(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasServiceIdentifier = true;
        result.serviceIdentifier_ = value;
        return this;
      }
      public Builder clearServiceIdentifier() {
        result.hasServiceIdentifier = false;
        result.serviceIdentifier_ = getDefaultInstance().getServiceIdentifier();
        return this;
      }
      
      // required string methodIdentifier = 3;
      public boolean hasMethodIdentifier() {
        return result.hasMethodIdentifier();
      }
      public java.lang.String getMethodIdentifier() {
        return result.getMethodIdentifier();
      }
      public Builder setMethodIdentifier(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMethodIdentifier = true;
        result.methodIdentifier_ = value;
        return this;
      }
      public Builder clearMethodIdentifier() {
        result.hasMethodIdentifier = false;
        result.methodIdentifier_ = getDefaultInstance().getMethodIdentifier();
        return this;
      }
      
      // required bytes requestBytes = 4;
      public boolean hasRequestBytes() {
        return result.hasRequestBytes();
      }
      public com.google.protobuf.ByteString getRequestBytes() {
        return result.getRequestBytes();
      }
      public Builder setRequestBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRequestBytes = true;
        result.requestBytes_ = value;
        return this;
      }
      public Builder clearRequestBytes() {
        result.hasRequestBytes = false;
        result.requestBytes_ = getDefaultInstance().getRequestBytes();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpcRequest)
    }
    
    static {
      defaultInstance = new RpcRequest(true);
      com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpcRequest)
  }
  
  public static final class RpcResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use RpcResponse.newBuilder() to construct.
    private RpcResponse() {
      initFields();
    }
    private RpcResponse(boolean noInit) {}
    
    private static final RpcResponse defaultInstance;
    public static RpcResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpcResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internal_static_RpcResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internal_static_RpcResponse_fieldAccessorTable;
    }
    
    // required int32 correlationId = 1;
    public static final int CORRELATIONID_FIELD_NUMBER = 1;
    private boolean hasCorrelationId;
    private int correlationId_ = 0;
    public boolean hasCorrelationId() { return hasCorrelationId; }
    public int getCorrelationId() { return correlationId_; }
    
    // required bytes responseBytes = 2;
    public static final int RESPONSEBYTES_FIELD_NUMBER = 2;
    private boolean hasResponseBytes;
    private com.google.protobuf.ByteString responseBytes_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasResponseBytes() { return hasResponseBytes; }
    public com.google.protobuf.ByteString getResponseBytes() { return responseBytes_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasCorrelationId) return false;
      if (!hasResponseBytes) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCorrelationId()) {
        output.writeInt32(1, getCorrelationId());
      }
      if (hasResponseBytes()) {
        output.writeBytes(2, getResponseBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCorrelationId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getCorrelationId());
      }
      if (hasResponseBytes()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getResponseBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse result;
      
      // Construct using com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse();
        return builder;
      }
      
      protected com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse.getDescriptor();
      }
      
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse getDefaultInstanceForType() {
        return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse) {
          return mergeFrom((com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse other) {
        if (other == com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse.getDefaultInstance()) return this;
        if (other.hasCorrelationId()) {
          setCorrelationId(other.getCorrelationId());
        }
        if (other.hasResponseBytes()) {
          setResponseBytes(other.getResponseBytes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCorrelationId(input.readInt32());
              break;
            }
            case 18: {
              setResponseBytes(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required int32 correlationId = 1;
      public boolean hasCorrelationId() {
        return result.hasCorrelationId();
      }
      public int getCorrelationId() {
        return result.getCorrelationId();
      }
      public Builder setCorrelationId(int value) {
        result.hasCorrelationId = true;
        result.correlationId_ = value;
        return this;
      }
      public Builder clearCorrelationId() {
        result.hasCorrelationId = false;
        result.correlationId_ = 0;
        return this;
      }
      
      // required bytes responseBytes = 2;
      public boolean hasResponseBytes() {
        return result.hasResponseBytes();
      }
      public com.google.protobuf.ByteString getResponseBytes() {
        return result.getResponseBytes();
      }
      public Builder setResponseBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasResponseBytes = true;
        result.responseBytes_ = value;
        return this;
      }
      public Builder clearResponseBytes() {
        result.hasResponseBytes = false;
        result.responseBytes_ = getDefaultInstance().getResponseBytes();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpcResponse)
    }
    
    static {
      defaultInstance = new RpcResponse(true);
      com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpcResponse)
  }
  
  public static final class RpcError extends
      com.google.protobuf.GeneratedMessage {
    // Use RpcError.newBuilder() to construct.
    private RpcError() {
      initFields();
    }
    private RpcError(boolean noInit) {}
    
    private static final RpcError defaultInstance;
    public static RpcError getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpcError getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internal_static_RpcError_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internal_static_RpcError_fieldAccessorTable;
    }
    
    // required int32 correlationId = 1;
    public static final int CORRELATIONID_FIELD_NUMBER = 1;
    private boolean hasCorrelationId;
    private int correlationId_ = 0;
    public boolean hasCorrelationId() { return hasCorrelationId; }
    public int getCorrelationId() { return correlationId_; }
    
    // required string errorMessage = 2;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 2;
    private boolean hasErrorMessage;
    private java.lang.String errorMessage_ = "";
    public boolean hasErrorMessage() { return hasErrorMessage; }
    public java.lang.String getErrorMessage() { return errorMessage_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasCorrelationId) return false;
      if (!hasErrorMessage) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCorrelationId()) {
        output.writeInt32(1, getCorrelationId());
      }
      if (hasErrorMessage()) {
        output.writeString(2, getErrorMessage());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCorrelationId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getCorrelationId());
      }
      if (hasErrorMessage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getErrorMessage());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError result;
      
      // Construct using com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError();
        return builder;
      }
      
      protected com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError.getDescriptor();
      }
      
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError getDefaultInstanceForType() {
        return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError) {
          return mergeFrom((com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError other) {
        if (other == com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError.getDefaultInstance()) return this;
        if (other.hasCorrelationId()) {
          setCorrelationId(other.getCorrelationId());
        }
        if (other.hasErrorMessage()) {
          setErrorMessage(other.getErrorMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCorrelationId(input.readInt32());
              break;
            }
            case 18: {
              setErrorMessage(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required int32 correlationId = 1;
      public boolean hasCorrelationId() {
        return result.hasCorrelationId();
      }
      public int getCorrelationId() {
        return result.getCorrelationId();
      }
      public Builder setCorrelationId(int value) {
        result.hasCorrelationId = true;
        result.correlationId_ = value;
        return this;
      }
      public Builder clearCorrelationId() {
        result.hasCorrelationId = false;
        result.correlationId_ = 0;
        return this;
      }
      
      // required string errorMessage = 2;
      public boolean hasErrorMessage() {
        return result.hasErrorMessage();
      }
      public java.lang.String getErrorMessage() {
        return result.getErrorMessage();
      }
      public Builder setErrorMessage(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasErrorMessage = true;
        result.errorMessage_ = value;
        return this;
      }
      public Builder clearErrorMessage() {
        result.hasErrorMessage = false;
        result.errorMessage_ = getDefaultInstance().getErrorMessage();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpcError)
    }
    
    static {
      defaultInstance = new RpcError(true);
      com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpcError)
  }
  
  public static final class RpcCancel extends
      com.google.protobuf.GeneratedMessage {
    // Use RpcCancel.newBuilder() to construct.
    private RpcCancel() {
      initFields();
    }
    private RpcCancel(boolean noInit) {}
    
    private static final RpcCancel defaultInstance;
    public static RpcCancel getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpcCancel getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internal_static_RpcCancel_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internal_static_RpcCancel_fieldAccessorTable;
    }
    
    // required int32 correlationId = 1;
    public static final int CORRELATIONID_FIELD_NUMBER = 1;
    private boolean hasCorrelationId;
    private int correlationId_ = 0;
    public boolean hasCorrelationId() { return hasCorrelationId; }
    public int getCorrelationId() { return correlationId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasCorrelationId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCorrelationId()) {
        output.writeInt32(1, getCorrelationId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCorrelationId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getCorrelationId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel result;
      
      // Construct using com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel();
        return builder;
      }
      
      protected com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel.getDescriptor();
      }
      
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel getDefaultInstanceForType() {
        return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel) {
          return mergeFrom((com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel other) {
        if (other == com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel.getDefaultInstance()) return this;
        if (other.hasCorrelationId()) {
          setCorrelationId(other.getCorrelationId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCorrelationId(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required int32 correlationId = 1;
      public boolean hasCorrelationId() {
        return result.hasCorrelationId();
      }
      public int getCorrelationId() {
        return result.getCorrelationId();
      }
      public Builder setCorrelationId(int value) {
        result.hasCorrelationId = true;
        result.correlationId_ = value;
        return this;
      }
      public Builder clearCorrelationId() {
        result.hasCorrelationId = false;
        result.correlationId_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpcCancel)
    }
    
    static {
      defaultInstance = new RpcCancel(true);
      com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpcCancel)
  }
  
  public static final class WirePayload extends
      com.google.protobuf.GeneratedMessage {
    // Use WirePayload.newBuilder() to construct.
    private WirePayload() {
      initFields();
    }
    private WirePayload(boolean noInit) {}
    
    private static final WirePayload defaultInstance;
    public static WirePayload getDefaultInstance() {
      return defaultInstance;
    }
    
    public WirePayload getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internal_static_WirePayload_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internal_static_WirePayload_fieldAccessorTable;
    }
    
    // optional .ConnectRequest connectRequest = 1;
    public static final int CONNECTREQUEST_FIELD_NUMBER = 1;
    private boolean hasConnectRequest;
    private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest connectRequest_;
    public boolean hasConnectRequest() { return hasConnectRequest; }
    public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest getConnectRequest() { return connectRequest_; }
    
    // optional .ConnectResponse connectResponse = 2;
    public static final int CONNECTRESPONSE_FIELD_NUMBER = 2;
    private boolean hasConnectResponse;
    private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse connectResponse_;
    public boolean hasConnectResponse() { return hasConnectResponse; }
    public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse getConnectResponse() { return connectResponse_; }
    
    // optional .RpcRequest rpcRequest = 3;
    public static final int RPCREQUEST_FIELD_NUMBER = 3;
    private boolean hasRpcRequest;
    private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest rpcRequest_;
    public boolean hasRpcRequest() { return hasRpcRequest; }
    public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest getRpcRequest() { return rpcRequest_; }
    
    // optional .RpcResponse rpcResponse = 4;
    public static final int RPCRESPONSE_FIELD_NUMBER = 4;
    private boolean hasRpcResponse;
    private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse rpcResponse_;
    public boolean hasRpcResponse() { return hasRpcResponse; }
    public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse getRpcResponse() { return rpcResponse_; }
    
    // optional .RpcError rpcError = 5;
    public static final int RPCERROR_FIELD_NUMBER = 5;
    private boolean hasRpcError;
    private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError rpcError_;
    public boolean hasRpcError() { return hasRpcError; }
    public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError getRpcError() { return rpcError_; }
    
    // optional .RpcCancel rpcCancel = 6;
    public static final int RPCCANCEL_FIELD_NUMBER = 6;
    private boolean hasRpcCancel;
    private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel rpcCancel_;
    public boolean hasRpcCancel() { return hasRpcCancel; }
    public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel getRpcCancel() { return rpcCancel_; }
    
    private void initFields() {
      connectRequest_ = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest.getDefaultInstance();
      connectResponse_ = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse.getDefaultInstance();
      rpcRequest_ = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest.getDefaultInstance();
      rpcResponse_ = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse.getDefaultInstance();
      rpcError_ = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError.getDefaultInstance();
      rpcCancel_ = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasConnectRequest()) {
        if (!getConnectRequest().isInitialized()) return false;
      }
      if (hasConnectResponse()) {
        if (!getConnectResponse().isInitialized()) return false;
      }
      if (hasRpcRequest()) {
        if (!getRpcRequest().isInitialized()) return false;
      }
      if (hasRpcResponse()) {
        if (!getRpcResponse().isInitialized()) return false;
      }
      if (hasRpcError()) {
        if (!getRpcError().isInitialized()) return false;
      }
      if (hasRpcCancel()) {
        if (!getRpcCancel().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasConnectRequest()) {
        output.writeMessage(1, getConnectRequest());
      }
      if (hasConnectResponse()) {
        output.writeMessage(2, getConnectResponse());
      }
      if (hasRpcRequest()) {
        output.writeMessage(3, getRpcRequest());
      }
      if (hasRpcResponse()) {
        output.writeMessage(4, getRpcResponse());
      }
      if (hasRpcError()) {
        output.writeMessage(5, getRpcError());
      }
      if (hasRpcCancel()) {
        output.writeMessage(6, getRpcCancel());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasConnectRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getConnectRequest());
      }
      if (hasConnectResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getConnectResponse());
      }
      if (hasRpcRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRpcRequest());
      }
      if (hasRpcResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getRpcResponse());
      }
      if (hasRpcError()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getRpcError());
      }
      if (hasRpcCancel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getRpcCancel());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload result;
      
      // Construct using com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload();
        return builder;
      }
      
      protected com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload.getDescriptor();
      }
      
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload getDefaultInstanceForType() {
        return com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload) {
          return mergeFrom((com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload other) {
        if (other == com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload.getDefaultInstance()) return this;
        if (other.hasConnectRequest()) {
          mergeConnectRequest(other.getConnectRequest());
        }
        if (other.hasConnectResponse()) {
          mergeConnectResponse(other.getConnectResponse());
        }
        if (other.hasRpcRequest()) {
          mergeRpcRequest(other.getRpcRequest());
        }
        if (other.hasRpcResponse()) {
          mergeRpcResponse(other.getRpcResponse());
        }
        if (other.hasRpcError()) {
          mergeRpcError(other.getRpcError());
        }
        if (other.hasRpcCancel()) {
          mergeRpcCancel(other.getRpcCancel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest.Builder subBuilder = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest.newBuilder();
              if (hasConnectRequest()) {
                subBuilder.mergeFrom(getConnectRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setConnectRequest(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse.Builder subBuilder = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse.newBuilder();
              if (hasConnectResponse()) {
                subBuilder.mergeFrom(getConnectResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setConnectResponse(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest.Builder subBuilder = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest.newBuilder();
              if (hasRpcRequest()) {
                subBuilder.mergeFrom(getRpcRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRpcRequest(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse.Builder subBuilder = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse.newBuilder();
              if (hasRpcResponse()) {
                subBuilder.mergeFrom(getRpcResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRpcResponse(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError.Builder subBuilder = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError.newBuilder();
              if (hasRpcError()) {
                subBuilder.mergeFrom(getRpcError());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRpcError(subBuilder.buildPartial());
              break;
            }
            case 50: {
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel.Builder subBuilder = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel.newBuilder();
              if (hasRpcCancel()) {
                subBuilder.mergeFrom(getRpcCancel());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRpcCancel(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .ConnectRequest connectRequest = 1;
      public boolean hasConnectRequest() {
        return result.hasConnectRequest();
      }
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest getConnectRequest() {
        return result.getConnectRequest();
      }
      public Builder setConnectRequest(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasConnectRequest = true;
        result.connectRequest_ = value;
        return this;
      }
      public Builder setConnectRequest(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest.Builder builderForValue) {
        result.hasConnectRequest = true;
        result.connectRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeConnectRequest(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest value) {
        if (result.hasConnectRequest() &&
            result.connectRequest_ != com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest.getDefaultInstance()) {
          result.connectRequest_ =
            com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest.newBuilder(result.connectRequest_).mergeFrom(value).buildPartial();
        } else {
          result.connectRequest_ = value;
        }
        result.hasConnectRequest = true;
        return this;
      }
      public Builder clearConnectRequest() {
        result.hasConnectRequest = false;
        result.connectRequest_ = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest.getDefaultInstance();
        return this;
      }
      
      // optional .ConnectResponse connectResponse = 2;
      public boolean hasConnectResponse() {
        return result.hasConnectResponse();
      }
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse getConnectResponse() {
        return result.getConnectResponse();
      }
      public Builder setConnectResponse(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasConnectResponse = true;
        result.connectResponse_ = value;
        return this;
      }
      public Builder setConnectResponse(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse.Builder builderForValue) {
        result.hasConnectResponse = true;
        result.connectResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeConnectResponse(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse value) {
        if (result.hasConnectResponse() &&
            result.connectResponse_ != com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse.getDefaultInstance()) {
          result.connectResponse_ =
            com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse.newBuilder(result.connectResponse_).mergeFrom(value).buildPartial();
        } else {
          result.connectResponse_ = value;
        }
        result.hasConnectResponse = true;
        return this;
      }
      public Builder clearConnectResponse() {
        result.hasConnectResponse = false;
        result.connectResponse_ = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse.getDefaultInstance();
        return this;
      }
      
      // optional .RpcRequest rpcRequest = 3;
      public boolean hasRpcRequest() {
        return result.hasRpcRequest();
      }
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest getRpcRequest() {
        return result.getRpcRequest();
      }
      public Builder setRpcRequest(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRpcRequest = true;
        result.rpcRequest_ = value;
        return this;
      }
      public Builder setRpcRequest(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest.Builder builderForValue) {
        result.hasRpcRequest = true;
        result.rpcRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeRpcRequest(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest value) {
        if (result.hasRpcRequest() &&
            result.rpcRequest_ != com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest.getDefaultInstance()) {
          result.rpcRequest_ =
            com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest.newBuilder(result.rpcRequest_).mergeFrom(value).buildPartial();
        } else {
          result.rpcRequest_ = value;
        }
        result.hasRpcRequest = true;
        return this;
      }
      public Builder clearRpcRequest() {
        result.hasRpcRequest = false;
        result.rpcRequest_ = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest.getDefaultInstance();
        return this;
      }
      
      // optional .RpcResponse rpcResponse = 4;
      public boolean hasRpcResponse() {
        return result.hasRpcResponse();
      }
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse getRpcResponse() {
        return result.getRpcResponse();
      }
      public Builder setRpcResponse(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRpcResponse = true;
        result.rpcResponse_ = value;
        return this;
      }
      public Builder setRpcResponse(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse.Builder builderForValue) {
        result.hasRpcResponse = true;
        result.rpcResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeRpcResponse(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse value) {
        if (result.hasRpcResponse() &&
            result.rpcResponse_ != com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse.getDefaultInstance()) {
          result.rpcResponse_ =
            com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse.newBuilder(result.rpcResponse_).mergeFrom(value).buildPartial();
        } else {
          result.rpcResponse_ = value;
        }
        result.hasRpcResponse = true;
        return this;
      }
      public Builder clearRpcResponse() {
        result.hasRpcResponse = false;
        result.rpcResponse_ = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse.getDefaultInstance();
        return this;
      }
      
      // optional .RpcError rpcError = 5;
      public boolean hasRpcError() {
        return result.hasRpcError();
      }
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError getRpcError() {
        return result.getRpcError();
      }
      public Builder setRpcError(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRpcError = true;
        result.rpcError_ = value;
        return this;
      }
      public Builder setRpcError(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError.Builder builderForValue) {
        result.hasRpcError = true;
        result.rpcError_ = builderForValue.build();
        return this;
      }
      public Builder mergeRpcError(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError value) {
        if (result.hasRpcError() &&
            result.rpcError_ != com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError.getDefaultInstance()) {
          result.rpcError_ =
            com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError.newBuilder(result.rpcError_).mergeFrom(value).buildPartial();
        } else {
          result.rpcError_ = value;
        }
        result.hasRpcError = true;
        return this;
      }
      public Builder clearRpcError() {
        result.hasRpcError = false;
        result.rpcError_ = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError.getDefaultInstance();
        return this;
      }
      
      // optional .RpcCancel rpcCancel = 6;
      public boolean hasRpcCancel() {
        return result.hasRpcCancel();
      }
      public com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel getRpcCancel() {
        return result.getRpcCancel();
      }
      public Builder setRpcCancel(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRpcCancel = true;
        result.rpcCancel_ = value;
        return this;
      }
      public Builder setRpcCancel(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel.Builder builderForValue) {
        result.hasRpcCancel = true;
        result.rpcCancel_ = builderForValue.build();
        return this;
      }
      public Builder mergeRpcCancel(com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel value) {
        if (result.hasRpcCancel() &&
            result.rpcCancel_ != com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel.getDefaultInstance()) {
          result.rpcCancel_ =
            com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel.newBuilder(result.rpcCancel_).mergeFrom(value).buildPartial();
        } else {
          result.rpcCancel_ = value;
        }
        result.hasRpcCancel = true;
        return this;
      }
      public Builder clearRpcCancel() {
        result.hasRpcCancel = false;
        result.rpcCancel_ = com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:WirePayload)
    }
    
    static {
      defaultInstance = new WirePayload(true);
      com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:WirePayload)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ConnectRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ConnectRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ConnectResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ConnectResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpcRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpcRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpcResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpcResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpcError_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpcError_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpcCancel_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpcCancel_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_WirePayload_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_WirePayload_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031protobuf-rpc-duplex.proto\"f\n\016ConnectRe" +
      "quest\022\025\n\rcorrelationId\030\001 \002(\005\022\026\n\016clientHo" +
      "stName\030\002 \002(\t\022\022\n\nclientPort\030\003 \002(\005\022\021\n\tclie" +
      "ntPID\030\004 \002(\t\"a\n\017ConnectResponse\022\025\n\rcorrel" +
      "ationId\030\001 \002(\005\022\021\n\tserverPID\030\002 \001(\t\022$\n\terro" +
      "rCode\030\003 \001(\0162\021.ConnectErrorCode\"n\n\nRpcReq" +
      "uest\022\025\n\rcorrelationId\030\001 \002(\005\022\031\n\021serviceId" +
      "entifier\030\002 \002(\t\022\030\n\020methodIdentifier\030\003 \002(\t" +
      "\022\024\n\014requestBytes\030\004 \002(\014\";\n\013RpcResponse\022\025\n" +
      "\rcorrelationId\030\001 \002(\005\022\025\n\rresponseBytes\030\002 ",
      "\002(\014\"7\n\010RpcError\022\025\n\rcorrelationId\030\001 \002(\005\022\024" +
      "\n\014errorMessage\030\002 \002(\t\"\"\n\tRpcCancel\022\025\n\rcor" +
      "relationId\030\001 \002(\005\"\341\001\n\013WirePayload\022\'\n\016conn" +
      "ectRequest\030\001 \001(\0132\017.ConnectRequest\022)\n\017con" +
      "nectResponse\030\002 \001(\0132\020.ConnectResponse\022\037\n\n" +
      "rpcRequest\030\003 \001(\0132\013.RpcRequest\022!\n\013rpcResp" +
      "onse\030\004 \001(\0132\014.RpcResponse\022\033\n\010rpcError\030\005 \001" +
      "(\0132\t.RpcError\022\035\n\trpcCancel\030\006 \001(\0132\n.RpcCa" +
      "ncel*)\n\020ConnectErrorCode\022\025\n\021ALREADY_CONN" +
      "ECTED\020\000B;\n\'com.googlecode.protobuf.pro.d",
      "uplex.wireB\016DuplexProtocolH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_ConnectRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_ConnectRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ConnectRequest_descriptor,
              new java.lang.String[] { "CorrelationId", "ClientHostName", "ClientPort", "ClientPID", },
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest.class,
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectRequest.Builder.class);
          internal_static_ConnectResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_ConnectResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ConnectResponse_descriptor,
              new java.lang.String[] { "CorrelationId", "ServerPID", "ErrorCode", },
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse.class,
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.ConnectResponse.Builder.class);
          internal_static_RpcRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_RpcRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpcRequest_descriptor,
              new java.lang.String[] { "CorrelationId", "ServiceIdentifier", "MethodIdentifier", "RequestBytes", },
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest.class,
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcRequest.Builder.class);
          internal_static_RpcResponse_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_RpcResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpcResponse_descriptor,
              new java.lang.String[] { "CorrelationId", "ResponseBytes", },
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse.class,
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcResponse.Builder.class);
          internal_static_RpcError_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_RpcError_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpcError_descriptor,
              new java.lang.String[] { "CorrelationId", "ErrorMessage", },
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError.class,
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcError.Builder.class);
          internal_static_RpcCancel_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_RpcCancel_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpcCancel_descriptor,
              new java.lang.String[] { "CorrelationId", },
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel.class,
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.RpcCancel.Builder.class);
          internal_static_WirePayload_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_WirePayload_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_WirePayload_descriptor,
              new java.lang.String[] { "ConnectRequest", "ConnectResponse", "RpcRequest", "RpcResponse", "RpcError", "RpcCancel", },
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload.class,
              com.googlecode.protobuf.pro.duplex.wire.DuplexProtocol.WirePayload.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
