// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf-rpc-duplex-log.proto

package com.googlecode.protobuf.pro.duplex.logging;

public final class RpcLogEntry {
  private RpcLogEntry() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class RpcPayloadInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use RpcPayloadInfo.newBuilder() to construct.
    private RpcPayloadInfo() {
      initFields();
    }
    private RpcPayloadInfo(boolean noInit) {}
    
    private static final RpcPayloadInfo defaultInstance;
    public static RpcPayloadInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpcPayloadInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.internal_static_RpcPayloadInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.internal_static_RpcPayloadInfo_fieldAccessorTable;
    }
    
    // required int64 ts = 1;
    public static final int TS_FIELD_NUMBER = 1;
    private boolean hasTs;
    private long ts_ = 0L;
    public boolean hasTs() { return hasTs; }
    public long getTs() { return ts_; }
    
    // optional int32 size = 2;
    public static final int SIZE_FIELD_NUMBER = 2;
    private boolean hasSize;
    private int size_ = 0;
    public boolean hasSize() { return hasSize; }
    public int getSize() { return size_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasTs) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTs()) {
        output.writeInt64(1, getTs());
      }
      if (hasSize()) {
        output.writeInt32(2, getSize());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTs()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getTs());
      }
      if (hasSize()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getSize());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo result;
      
      // Construct using com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo();
        return builder;
      }
      
      protected com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.getDescriptor();
      }
      
      public com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo getDefaultInstanceForType() {
        return com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo) {
          return mergeFrom((com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo other) {
        if (other == com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.getDefaultInstance()) return this;
        if (other.hasTs()) {
          setTs(other.getTs());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setTs(input.readInt64());
              break;
            }
            case 16: {
              setSize(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required int64 ts = 1;
      public boolean hasTs() {
        return result.hasTs();
      }
      public long getTs() {
        return result.getTs();
      }
      public Builder setTs(long value) {
        result.hasTs = true;
        result.ts_ = value;
        return this;
      }
      public Builder clearTs() {
        result.hasTs = false;
        result.ts_ = 0L;
        return this;
      }
      
      // optional int32 size = 2;
      public boolean hasSize() {
        return result.hasSize();
      }
      public int getSize() {
        return result.getSize();
      }
      public Builder setSize(int value) {
        result.hasSize = true;
        result.size_ = value;
        return this;
      }
      public Builder clearSize() {
        result.hasSize = false;
        result.size_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpcPayloadInfo)
    }
    
    static {
      defaultInstance = new RpcPayloadInfo(true);
      com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpcPayloadInfo)
  }
  
  public static final class RpcCall extends
      com.google.protobuf.GeneratedMessage {
    // Use RpcCall.newBuilder() to construct.
    private RpcCall() {
      initFields();
    }
    private RpcCall(boolean noInit) {}
    
    private static final RpcCall defaultInstance;
    public static RpcCall getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpcCall getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.internal_static_RpcCall_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.internal_static_RpcCall_fieldAccessorTable;
    }
    
    // required int32 duration = 1;
    public static final int DURATION_FIELD_NUMBER = 1;
    private boolean hasDuration;
    private int duration_ = 0;
    public boolean hasDuration() { return hasDuration; }
    public int getDuration() { return duration_; }
    
    // required string server = 2;
    public static final int SERVER_FIELD_NUMBER = 2;
    private boolean hasServer;
    private java.lang.String server_ = "";
    public boolean hasServer() { return hasServer; }
    public java.lang.String getServer() { return server_; }
    
    // required string signature = 3;
    public static final int SIGNATURE_FIELD_NUMBER = 3;
    private boolean hasSignature;
    private java.lang.String signature_ = "";
    public boolean hasSignature() { return hasSignature; }
    public java.lang.String getSignature() { return signature_; }
    
    // required string client = 4;
    public static final int CLIENT_FIELD_NUMBER = 4;
    private boolean hasClient;
    private java.lang.String client_ = "";
    public boolean hasClient() { return hasClient; }
    public java.lang.String getClient() { return client_; }
    
    // required int32 corId = 5;
    public static final int CORID_FIELD_NUMBER = 5;
    private boolean hasCorId;
    private int corId_ = 0;
    public boolean hasCorId() { return hasCorId; }
    public int getCorId() { return corId_; }
    
    // optional string error = 6;
    public static final int ERROR_FIELD_NUMBER = 6;
    private boolean hasError;
    private java.lang.String error_ = "";
    public boolean hasError() { return hasError; }
    public java.lang.String getError() { return error_; }
    
    // optional .RpcPayloadInfo request = 7;
    public static final int REQUEST_FIELD_NUMBER = 7;
    private boolean hasRequest;
    private com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo request_;
    public boolean hasRequest() { return hasRequest; }
    public com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo getRequest() { return request_; }
    
    // optional .RpcPayloadInfo response = 8;
    public static final int RESPONSE_FIELD_NUMBER = 8;
    private boolean hasResponse;
    private com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo response_;
    public boolean hasResponse() { return hasResponse; }
    public com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo getResponse() { return response_; }
    
    private void initFields() {
      request_ = com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.getDefaultInstance();
      response_ = com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasDuration) return false;
      if (!hasServer) return false;
      if (!hasSignature) return false;
      if (!hasClient) return false;
      if (!hasCorId) return false;
      if (hasRequest()) {
        if (!getRequest().isInitialized()) return false;
      }
      if (hasResponse()) {
        if (!getResponse().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDuration()) {
        output.writeInt32(1, getDuration());
      }
      if (hasServer()) {
        output.writeString(2, getServer());
      }
      if (hasSignature()) {
        output.writeString(3, getSignature());
      }
      if (hasClient()) {
        output.writeString(4, getClient());
      }
      if (hasCorId()) {
        output.writeInt32(5, getCorId());
      }
      if (hasError()) {
        output.writeString(6, getError());
      }
      if (hasRequest()) {
        output.writeMessage(7, getRequest());
      }
      if (hasResponse()) {
        output.writeMessage(8, getResponse());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDuration()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getDuration());
      }
      if (hasServer()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getServer());
      }
      if (hasSignature()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getSignature());
      }
      if (hasClient()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getClient());
      }
      if (hasCorId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getCorId());
      }
      if (hasError()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getError());
      }
      if (hasRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getRequest());
      }
      if (hasResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getResponse());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall result;
      
      // Construct using com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall();
        return builder;
      }
      
      protected com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall.getDescriptor();
      }
      
      public com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall getDefaultInstanceForType() {
        return com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall) {
          return mergeFrom((com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall other) {
        if (other == com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall.getDefaultInstance()) return this;
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (other.hasServer()) {
          setServer(other.getServer());
        }
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        if (other.hasClient()) {
          setClient(other.getClient());
        }
        if (other.hasCorId()) {
          setCorId(other.getCorId());
        }
        if (other.hasError()) {
          setError(other.getError());
        }
        if (other.hasRequest()) {
          mergeRequest(other.getRequest());
        }
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setDuration(input.readInt32());
              break;
            }
            case 18: {
              setServer(input.readString());
              break;
            }
            case 26: {
              setSignature(input.readString());
              break;
            }
            case 34: {
              setClient(input.readString());
              break;
            }
            case 40: {
              setCorId(input.readInt32());
              break;
            }
            case 50: {
              setError(input.readString());
              break;
            }
            case 58: {
              com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.Builder subBuilder = com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.newBuilder();
              if (hasRequest()) {
                subBuilder.mergeFrom(getRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRequest(subBuilder.buildPartial());
              break;
            }
            case 66: {
              com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.Builder subBuilder = com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.newBuilder();
              if (hasResponse()) {
                subBuilder.mergeFrom(getResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResponse(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required int32 duration = 1;
      public boolean hasDuration() {
        return result.hasDuration();
      }
      public int getDuration() {
        return result.getDuration();
      }
      public Builder setDuration(int value) {
        result.hasDuration = true;
        result.duration_ = value;
        return this;
      }
      public Builder clearDuration() {
        result.hasDuration = false;
        result.duration_ = 0;
        return this;
      }
      
      // required string server = 2;
      public boolean hasServer() {
        return result.hasServer();
      }
      public java.lang.String getServer() {
        return result.getServer();
      }
      public Builder setServer(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasServer = true;
        result.server_ = value;
        return this;
      }
      public Builder clearServer() {
        result.hasServer = false;
        result.server_ = getDefaultInstance().getServer();
        return this;
      }
      
      // required string signature = 3;
      public boolean hasSignature() {
        return result.hasSignature();
      }
      public java.lang.String getSignature() {
        return result.getSignature();
      }
      public Builder setSignature(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSignature = true;
        result.signature_ = value;
        return this;
      }
      public Builder clearSignature() {
        result.hasSignature = false;
        result.signature_ = getDefaultInstance().getSignature();
        return this;
      }
      
      // required string client = 4;
      public boolean hasClient() {
        return result.hasClient();
      }
      public java.lang.String getClient() {
        return result.getClient();
      }
      public Builder setClient(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasClient = true;
        result.client_ = value;
        return this;
      }
      public Builder clearClient() {
        result.hasClient = false;
        result.client_ = getDefaultInstance().getClient();
        return this;
      }
      
      // required int32 corId = 5;
      public boolean hasCorId() {
        return result.hasCorId();
      }
      public int getCorId() {
        return result.getCorId();
      }
      public Builder setCorId(int value) {
        result.hasCorId = true;
        result.corId_ = value;
        return this;
      }
      public Builder clearCorId() {
        result.hasCorId = false;
        result.corId_ = 0;
        return this;
      }
      
      // optional string error = 6;
      public boolean hasError() {
        return result.hasError();
      }
      public java.lang.String getError() {
        return result.getError();
      }
      public Builder setError(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasError = true;
        result.error_ = value;
        return this;
      }
      public Builder clearError() {
        result.hasError = false;
        result.error_ = getDefaultInstance().getError();
        return this;
      }
      
      // optional .RpcPayloadInfo request = 7;
      public boolean hasRequest() {
        return result.hasRequest();
      }
      public com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo getRequest() {
        return result.getRequest();
      }
      public Builder setRequest(com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRequest = true;
        result.request_ = value;
        return this;
      }
      public Builder setRequest(com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.Builder builderForValue) {
        result.hasRequest = true;
        result.request_ = builderForValue.build();
        return this;
      }
      public Builder mergeRequest(com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo value) {
        if (result.hasRequest() &&
            result.request_ != com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.getDefaultInstance()) {
          result.request_ =
            com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.newBuilder(result.request_).mergeFrom(value).buildPartial();
        } else {
          result.request_ = value;
        }
        result.hasRequest = true;
        return this;
      }
      public Builder clearRequest() {
        result.hasRequest = false;
        result.request_ = com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.getDefaultInstance();
        return this;
      }
      
      // optional .RpcPayloadInfo response = 8;
      public boolean hasResponse() {
        return result.hasResponse();
      }
      public com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo getResponse() {
        return result.getResponse();
      }
      public Builder setResponse(com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder setResponse(com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.Builder builderForValue) {
        result.hasResponse = true;
        result.response_ = builderForValue.build();
        return this;
      }
      public Builder mergeResponse(com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo value) {
        if (result.hasResponse() &&
            result.response_ != com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.getDefaultInstance()) {
          result.response_ =
            com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.newBuilder(result.response_).mergeFrom(value).buildPartial();
        } else {
          result.response_ = value;
        }
        result.hasResponse = true;
        return this;
      }
      public Builder clearResponse() {
        result.hasResponse = false;
        result.response_ = com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpcCall)
    }
    
    static {
      defaultInstance = new RpcCall(true);
      com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpcCall)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpcPayloadInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpcPayloadInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpcCall_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpcCall_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035protobuf-rpc-duplex-log.proto\"*\n\016RpcPa" +
      "yloadInfo\022\n\n\002ts\030\001 \002(\003\022\014\n\004size\030\002 \001(\005\"\261\001\n\007" +
      "RpcCall\022\020\n\010duration\030\001 \002(\005\022\016\n\006server\030\002 \002(" +
      "\t\022\021\n\tsignature\030\003 \002(\t\022\016\n\006client\030\004 \002(\t\022\r\n\005" +
      "corId\030\005 \002(\005\022\r\n\005error\030\006 \001(\t\022 \n\007request\030\007 " +
      "\001(\0132\017.RpcPayloadInfo\022!\n\010response\030\010 \001(\0132\017" +
      ".RpcPayloadInfoB;\n*com.googlecode.protob" +
      "uf.pro.duplex.loggingB\013RpcLogEntryH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_RpcPayloadInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_RpcPayloadInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpcPayloadInfo_descriptor,
              new java.lang.String[] { "Ts", "Size", },
              com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.class,
              com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcPayloadInfo.Builder.class);
          internal_static_RpcCall_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_RpcCall_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpcCall_descriptor,
              new java.lang.String[] { "Duration", "Server", "Signature", "Client", "CorId", "Error", "Request", "Response", },
              com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall.class,
              com.googlecode.protobuf.pro.duplex.logging.RpcLogEntry.RpcCall.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
