// Copyright (c) 2010 Peter Klauser

//
// TcpClient->TcpServer : PullRequest
// TcpClient->TcpServer : PushRequest
// TcpServer->TcpClient : Chunk
// TcpClient->TcpServer : CloseNotification ( for closing pulls before transfer end. )
// TcpServer->TcpClient : CloseNotification ( for closing pushes before transfer end. )
// 

option java_package = "com.googlecode.protobuf.pro.stream.wire";
option java_outer_classname = "StreamProtocol";

// This is default, but it's nice to be explicit
option optimize_for = SPEED;


message PullRequest {
    required int32 correlationId = 1;
    required bytes requestProto = 2;
}

message PushRequest {
    required int32 correlationId = 1;
    required bytes requestProto = 2;
}

message CloseNotification {
    required int32 correlationId = 1;
}

message Parameter {
	required string name = 1;
	required string value= 2;
}

message Chunk {
    required int32 correlationId = 1; // unique for each push/pull per channel
    required ChunkTypeCode chunkType = 2;
    required int32 seqNo = 3; // incremented for each sent chunk
    repeated Parameter parameter = 4;
    optional bytes payload = 5;
}

enum ChunkTypeCode {
  START = 0;
  MIDDLE = 1;
  END = 2;
}

message WirePayload {
	optional Chunk chunk = 1;
	optional PullRequest pull = 2;
	optional PushRequest push = 3;
	optional CloseNotification close = 4;
}

